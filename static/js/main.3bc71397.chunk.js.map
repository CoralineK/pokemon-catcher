{"version":3,"sources":["Context.tsx","components/Logo.tsx","constants.tsx","components/Button.tsx","components/Nickname.tsx","pages/Start.tsx","API.tsx","components/Info.tsx","components/Pokemon.tsx","components/Pokemons.tsx","pages/Catching.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Context","React","createContext","undefined","FONT_SIZE","Text","styled","div","TextBox","TextBlue","TextYellow","Logo","basicFont","navyblue","red","flexColumnCenter","small","medium","Button","button","Form","form","Container","NicknameInput","input","Alert","p","Nickname","history","useHistory","useState","alert","setAlert","useContext","state","action","onSubmit","e","preventDefault","nickname","localStorage","setItem","push","type","placeholder","onChange","setNickname","target","value","Body","Start","useEffect","getPokemons","offset","a","TO_URL","fetch","response","json","data","results","getPokemonInfo","pokemon","url","name","toUpperCase","replaceAll","artwork","sprites","other","front_default","stats","map","stat","base_stat","Stat","Info","CatchState","show","pokemonInfo","index","catchState","CATCHED","UNCATCHED","DEFAULT","Name","Artwork","Pokemon","catched","setPokemonInfo","setCatchState","showTooltip","setShowTooltip","API","then","result","fetchPokemonInfo","pokemonsInfo","setPokemonsInfo","includes","onMouseEnter","onMouseLeave","src","alt","Pokemons","pokemons","Welcome","Message","Catching","setPokemons","setCatched","loading","setLoading","error","setError","length","catch","message","onClick","catchedPokemons","filter","Math","round","random","console","log","nickanme","style","backgroundColor","color","Router","exact","path","component","App","getItem","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bc71397.chunk.js","sourcesContent":["import React from 'react';\r\nimport { PokemonInfo } from './types';\r\n\r\ntype ContextType = {\r\n  state: { nickname: string; pokemonsInfo: any };\r\n  action: {\r\n    setNickname: (nickname: string) => void;\r\n    setPokemonsInfo: (pokemonsInfo: PokemonInfo[]) => void;\r\n  };\r\n};\r\n\r\nconst Context = React.createContext<ContextType>(undefined!);\r\n\r\nexport default Context;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FONT_SIZE = '8vh';\r\n\r\nconst Text = styled.div`\r\n  font-size: ${FONT_SIZE};\r\n  padding: 0 0.2em 0.4em;\r\n  position: absolute;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  position: relative;\r\n  width: calc(${FONT_SIZE} * 5);\r\n  height: calc(${FONT_SIZE} * 2.5);\r\n  text-align: center;\r\n\r\n  @media (min-width: 768px) {\r\n    width: calc(${FONT_SIZE} * 8.83);\r\n    height: calc(${FONT_SIZE} * 1.4);\r\n  }\r\n`;\r\nconst TextBlue = styled(Text)`\r\n  font-family: PokemonHollow;\r\n  color: #3d7dca;\r\n  font-weight: bold;\r\n  z-index: 2;\r\n`;\r\nconst TextYellow = styled(Text)`\r\n  font-family: PokemonSolid;\r\n  color: #ffcb05;\r\n  text-shadow: -4px 5px #003a70;\r\n`;\r\n\r\nfunction Logo() {\r\n  return (\r\n    <TextBox>\r\n      <TextBlue>Pokémon Catcher</TextBlue>\r\n      <TextYellow>Pokémon Catcher</TextYellow>\r\n    </TextBox>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","// FONTS\r\nexport const basicFont = `\r\n  font-family: 'Ubuntu', sans-serif;\r\n  color: #2e2e2e;\r\n`;\r\nexport const extraFont = `\r\nfont-family: 'VT323', monospace;\r\ncolor: white;\r\nfont-size: 25px;\r\n`;\r\n\r\n// COLORS\r\nexport const blue = `#3d7dca`;\r\nexport const yellow = `#ffcb05`;\r\nexport const navyblue = `#003a70`;\r\nexport const grey = `#2e2e2e`;\r\n\r\n// ACCENT COLORS\r\nexport const green = `#4ede31`;\r\nexport const red = `#eb4034`;\r\n\r\n// FLEX\r\nexport const flexColumnCenter = `\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\n// BREAKPOINTS\r\nexport const xsmall = `320px`;\r\nexport const small = `480px`;\r\nexport const medium = `768px`;\r\nexport const large = `992px`;\r\nexport const extralarge = `1200px`;\r\n","import styled from 'styled-components';\r\nimport { basicFont } from '../constants';\r\n\r\nconst Button = styled.button`\r\n  ${basicFont}\r\n  border: none;\r\n  background-color: #ffcb05;\r\n  margin: 30px 0px;\r\n  padding: 15px 40px;\r\n  font-size: 25px;\r\n\r\n  @media (min-width: 769px) {\r\n    padding: 10px 30px;\r\n    font-size: 20px;\r\n  }\r\n  @media (min-width: 1201px) {\r\n    padding: 15px 40px;\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Context from '../Context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from './Button';\r\nimport { basicFont, blue, red, flexColumnCenter, medium } from '../constants';\r\n\r\nconst Form = styled.form`\r\n  ${flexColumnCenter}\r\n`;\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  height: 80px;\r\n  margin: 10vh 0 5vh;\r\n`;\r\nconst NicknameInput = styled.input`\r\n  ${basicFont}\r\n  padding: 8px;\r\n  border: none;\r\n  box-shadow: 0px 2px ${blue};\r\n  font-size: 20px;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n\r\n  @media (min-width: ${medium}) {\r\n    width: 400px;\r\n  }\r\n`;\r\nconst Alert = styled.p`\r\n  ${basicFont}\r\n  font-size: 15px;\r\n  color: ${red};\r\n`;\r\n\r\nfunction Nickname() {\r\n  const history = useHistory();\r\n  const [alert, setAlert] = useState('');\r\n  const { state, action } = useContext(Context);\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    e.preventDefault();\r\n    setAlert('');\r\n    action.setNickname(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e: React.ChangeEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    if (!state.nickname) {\r\n      setAlert('Nickname is required');\r\n    } else {\r\n      localStorage.setItem('nickname', state.nickname);\r\n      history.push('/catching');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Container>\r\n        <NicknameInput\r\n          type=\"text\"\r\n          placeholder=\"pick your nickname\"\r\n          onChange={handleChange}\r\n        />\r\n        <Alert>{alert}</Alert>\r\n      </Container>\r\n      <Button type=\"submit\">Continue</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Nickname;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Context from '../Context';\r\nimport styled from 'styled-components';\r\nimport Logo from '../components/Logo';\r\nimport Nickname from '../components/Nickname';\r\nimport { flexColumnCenter } from '../constants';\r\n\r\nconst Body = styled.div`\r\n  ${flexColumnCenter}\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nfunction Start() {\r\n  const { action } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    action.setNickname(undefined!);\r\n  }, []);\r\n\r\n  return (\r\n    <Body>\r\n      <Logo />\r\n      <Nickname />\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","export const getPokemons = async (offset: number) => {\r\n  const TO_URL = `https://pokeapi.co/api/v2/pokemon?limit=5&offset=${offset}`;\r\n  const response = await fetch(TO_URL);\r\n  const data = await response.json();\r\n  return data.results;\r\n};\r\n\r\nexport const getPokemonInfo = async (pokemon: any) => {\r\n  const TO_URL = `${pokemon.url}`;\r\n  const response = await fetch(TO_URL);\r\n  const data = await response.json();\r\n  return {\r\n    name: pokemon.name.toUpperCase().replaceAll('-', ' '),\r\n    artwork: data.sprites.other['official-artwork'].front_default,\r\n    stats: data.stats.map((stat: any) => ({\r\n      name: stat.stat.name.toUpperCase().replaceAll('-', ' '),\r\n      value: stat.base_stat,\r\n    })),\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PokemonInfo, Stats } from '../types';\r\nimport { extraFont, flexColumnCenter } from '../constants';\r\n\r\nconst Container = styled.div`\r\n  ${flexColumnCenter}\r\n  position: absolute;\r\n  z-index: 3;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Stat = styled.div`\r\n  ${extraFont}\r\n`;\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  pokemonInfo: PokemonInfo;\r\n};\r\n\r\nfunction Info({ show, pokemonInfo }: Props) {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Container>\r\n      {pokemonInfo.stats.map((stat: Stats, index: number) => (\r\n        <Stat key={index}>\r\n          {stat.name.toUpperCase()} {stat.value}\r\n        </Stat>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as API from '../API';\r\nimport { PokemonType, PokemonInfo } from '../types';\r\nimport Context from '../Context';\r\nimport Info from './Info';\r\nimport {\r\n  basicFont,\r\n  navyblue,\r\n  green,\r\n  red,\r\n  flexColumnCenter,\r\n  large,\r\n} from '../constants';\r\n\r\nenum CatchState {\r\n  DEFAULT,\r\n  CATCHED,\r\n  UNCATCHED,\r\n}\r\n\r\nfunction getBoxShadow({ catchState }: { catchState: CatchState }) {\r\n  switch (catchState) {\r\n    case CatchState.CATCHED:\r\n      return `inset 0 0 0 2px ${green}`;\r\n    case CatchState.UNCATCHED:\r\n      return `inset 0 0 0 2px ${red}`;\r\n    case CatchState.DEFAULT:\r\n    default:\r\n      return `inset 0 0 0 1px ${navyblue}`;\r\n  }\r\n}\r\n\r\nconst Container = styled.div<{ catchState: CatchState }>`\r\n  ${flexColumnCenter}\r\n  position: relative;\r\n  border-radius: 8px;\r\n  padding: 2vh 1vw;\r\n  margin: 10px;\r\n  box-shadow: ${getBoxShadow};\r\n`;\r\nconst Name = styled.div`\r\n  ${basicFont}\r\n  font-size: 20px;\r\n  padding-top: 5px;\r\n\r\n  @media (min-width: ${large}) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\nconst Artwork = styled.div`\r\n  img {\r\n    height: 18vh;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  pokemon: PokemonType;\r\n  catched?: PokemonInfo[];\r\n};\r\n\r\nfunction Pokemon({ pokemon, catched }: Props) {\r\n  const { state, action } = useContext(Context);\r\n  const [pokemonInfo, setPokemonInfo] = useState<PokemonInfo>();\r\n  const [catchState, setCatchState] = useState<CatchState>(CatchState.DEFAULT);\r\n  const [showTooltip, setShowTooltip] = useState<boolean>(false);\r\n\r\n  const fetchPokemonInfo = (pokemon: PokemonType) => {\r\n    API.getPokemonInfo(pokemon).then((result) => {\r\n      setPokemonInfo(result);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemonInfo(pokemon);\r\n  }, [pokemon]);\r\n\r\n  useEffect(() => {\r\n    pokemonInfo &&\r\n      (!state.pokemonsInfo\r\n        ? action.setPokemonsInfo([pokemonInfo])\r\n        : action.setPokemonsInfo([...state.pokemonsInfo, pokemonInfo]));\r\n  }, [pokemonInfo]);\r\n\r\n  useEffect(() => {\r\n    if (pokemonInfo && catched) {\r\n      catched.map((e: PokemonInfo) => e.name).includes(pokemonInfo.name)\r\n        ? setCatchState(CatchState.CATCHED)\r\n        : setCatchState(CatchState.UNCATCHED);\r\n    }\r\n  }, [catched, pokemonInfo]);\r\n\r\n  function handleOnMouseEnter() {\r\n    setShowTooltip(true);\r\n  }\r\n  function handleOnMouseLeave() {\r\n    setShowTooltip(false);\r\n  }\r\n\r\n  if (!pokemonInfo) return null;\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={handleOnMouseEnter}\r\n      onMouseLeave={handleOnMouseLeave}\r\n      catchState={catchState}\r\n    >\r\n      <Info show={showTooltip} pokemonInfo={pokemonInfo} />\r\n      <Artwork>\r\n        <img src={pokemonInfo.artwork} alt={pokemon.name} />\r\n      </Artwork>\r\n      <Name>{pokemonInfo.name}</Name>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Pokemon from '../components/Pokemon';\r\nimport { PokemonInfo, PokemonType } from '../types';\r\nimport { small } from '../constants';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${small}) {\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  pokemons?: PokemonType[];\r\n  catched?: PokemonInfo[];\r\n};\r\n\r\nfunction Pokemons({ pokemons, catched }: Props) {\r\n  return (\r\n    <Container>\r\n      {pokemons &&\r\n        pokemons.map((pokemon: PokemonType, index: number) => (\r\n          <Pokemon pokemon={pokemon} catched={catched} key={index}></Pokemon>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Pokemons;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Context from '../Context';\r\nimport Button from '../components/Button';\r\nimport Logo from '../components/Logo';\r\nimport Pokemons from '../components/Pokemons';\r\nimport * as API from '../API';\r\nimport { PokemonInfo, PokemonType } from '../types';\r\nimport {\r\n  basicFont,\r\n  flexColumnCenter,\r\n  navyblue,\r\n  small,\r\n  medium,\r\n  red,\r\n} from '../constants';\r\n\r\nconst Body = styled.div`\r\n  ${flexColumnCenter}\r\n  width: 100%;\r\n  padding-top: 4vh;\r\n\r\n  @media (min-width: ${medium}) {\r\n    min-height: 100vh;\r\n  }\r\n`;\r\nconst Welcome = styled.p`\r\n  ${basicFont}\r\n  color: ${navyblue};\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  margin: 5vh 0;\r\n\r\n  @media (min-width: ${small}) {\r\n    font-size: 30px;\r\n  }\r\n  @media (min-width: ${medium}) {\r\n    font-size: 35px;\r\n  }\r\n`;\r\nconst Message = styled.div`\r\n  ${basicFont}\r\n  color: ${red};\r\n  font-size: 30px;\r\n`;\r\n\r\nfunction Catching() {\r\n  const { state } = useContext(Context);\r\n\r\n  const [pokemons, setPokemons] = useState<PokemonType[] | undefined>();\r\n  const [catched, setCatched] = useState<PokemonInfo[] | undefined>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPokemons = (offset: number) => {\r\n    setLoading(true);\r\n    API.getPokemons(offset)\r\n      .then((result) => {\r\n        setPokemons(result);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemons(state.nickname.length * 10);\r\n  }, []);\r\n\r\n  function handleOnClick() {\r\n    setCatched([]);\r\n\r\n    const catchedPokemons = state.pokemonsInfo.filter(\r\n      () => Math.round(Math.random()) === 1,\r\n    );\r\n\r\n    setCatched(catchedPokemons);\r\n\r\n    console.log({\r\n      nickanme: state.nickname,\r\n      pokemons: catchedPokemons,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      <Logo />\r\n      <Welcome>Welcome, {state.nickname}!</Welcome>\r\n      {loading ? (\r\n        <Message>Loading...</Message>\r\n      ) : error ? (\r\n        <Message>Sorry something went wrong</Message>\r\n      ) : (\r\n        <>\r\n          <Pokemons pokemons={pokemons} catched={catched} />\r\n          <Button\r\n            onClick={handleOnClick}\r\n            style={{ backgroundColor: '#3d7dca', color: 'white' }}\r\n          >\r\n            Catch'em!\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default Catching;\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Start from './pages/Start';\r\nimport Catching from './pages/Catching';\r\n\r\nexport default function Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Start} />\r\n        <Route path=\"/catching\" component={Catching} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport Router from './Router';\nimport Context from './Context';\nimport { PokemonInfo } from './types';\n\nfunction App() {\n  const [nickname, setNickname] = useState<string>(\n    localStorage.getItem('nickname') || undefined!,\n  );\n  const [pokemonsInfo, setPokemonsInfo] = useState<PokemonInfo[]>(undefined!);\n\n  return (\n    <Context.Provider\n      value={{\n        state: { nickname, pokemonsInfo },\n        action: { setNickname, setPokemonsInfo },\n      }}\n    >\n      <Router />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}